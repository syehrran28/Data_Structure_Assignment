[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Sugumaran\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Sugumaran\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.3 (Oracle Corporation Java 1.8.0_371)
[debug]       Load.loadUnit: plugins took 90.4356ms
[debug]       Load.loadUnit: defsScala took 0.3625ms
[debug] [Loading] Scanning directory C:\Users\Sugumaran\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Sugumaran\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.4907 ms
[debug]           Load.resolveProject(global-plugins) took 47.2278ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Sugumaran\.sbt\1.0\plugins, plugins: List(<none>))) took 94.9988ms
[debug] [Loading] Done in C:\Users\Sugumaran\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 198.8853ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2813ms
[debug]     Load.loadUnit(file:/C:/Users/Sugumaran/.sbt/1.0/plugins/, ...) took 297.9493ms
[debug]   Load.apply: load took 448.6536ms
[debug]   Load.apply: resolveProjects took 7.804ms
[debug]   Load.apply: finalTransforms took 58.3541ms
[debug]   Load.apply: config.delegates took 7.7209ms
[debug]   Load.apply: Def.make(settings)... took 343.8432ms
[debug]   Load.apply: structureIndex took 92.6689ms
[debug]   Load.apply: mkStreams took 1.7508ms
[info] loading global plugins from C:\Users\Sugumaran\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4089.4496ms
[debug]           Load.loadUnit: plugins took 23.8512ms
[debug]           Load.loadUnit: defsScala took 0.0042ms
[debug] [Loading] Scanning directory C:\Users\Sugumaran\IdeaProjects\MyFirstFx\project
[debug]             Load.loadUnit: mkEval took 10.6178ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Sugumaran\IdeaProjects\MyFirstFx\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.7155 ms
[info] loading settings for project myfirstfx-build from idea.sbt ...
[debug]               Load.resolveProject(myfirstfx-build) took 2.8138ms
[debug]             Load.loadTransitive: finalizeProject(Project(id myfirstfx-build, base: C:\Users\Sugumaran\IdeaProjects\MyFirstFx\project, plugins: List(<none>))) took 6.0548ms
[debug] [Loading] Done in C:\Users\Sugumaran\IdeaProjects\MyFirstFx\project, returning: (myfirstfx-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2215.9821ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.2523ms
[debug]         Load.loadUnit(file:/C:/Users/Sugumaran/IdeaProjects/MyFirstFx/project/, ...) took 2245.2135ms
[debug]       Load.apply: load took 2246.6371ms
[debug]       Load.apply: resolveProjects took 0.1049ms
[debug]       Load.apply: finalTransforms took 8.6698ms
[debug]       Load.apply: config.delegates took 0.3142ms
[debug]       Load.apply: Def.make(settings)... took 100.2119ms
[debug]       Load.apply: structureIndex took 50.4001ms
[debug]       Load.apply: mkStreams took 0.0032ms
[info] loading project definition from C:\Users\Sugumaran\IdeaProjects\MyFirstFx\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6459.6271ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\Sugumaran\IdeaProjects\MyFirstFx
[debug]       Load.loadUnit: mkEval took 0.4719ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.586 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 30.9496ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Sugumaran\IdeaProjects\MyFirstFx, plugins: List(<none>))) took 34.1701ms
[debug] [Loading] Done in C:\Users\Sugumaran\IdeaProjects\MyFirstFx, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1389.466ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.2442ms
[debug]   Load.loadUnit(file:/C:/Users/Sugumaran/IdeaProjects/MyFirstFx/, ...) took 7858.3573ms
[debug] Load.apply: load took 7860.1404ms
[debug] Load.apply: resolveProjects took 0.1306ms
[debug] Load.apply: finalTransforms took 23.0154ms
[debug] Load.apply: config.delegates took 0.288ms
[debug] Load.apply: Def.make(settings)... took 58.4741ms
[debug] Load.apply: structureIndex took 16.9883ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to MyFirstFx (in build file:/C:/Users/Sugumaran/IdeaProjects/MyFirstFx/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64301 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64301, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to MyFirstFx (in build file:/C:/Users/Sugumaran/IdeaProjects/MyFirstFx/)
[debug] > Exec(idea-shell, None, None)
